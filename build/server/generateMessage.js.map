{"version":3,"sources":["generateMessage.js"],"names":[],"mappings":";;;;;;;;;kBAAe,IAAI;;;;sBACO,QAAQ;;;;kCACf,sBAAsB;;;;sBACtB,UAAU;;;;;AAG7B,IAAM,KAAK,GAAG,CACZ,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAC,EACpC,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAC,EACxC,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,EAAC,EACtC,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAC,EAClC,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAC,EAClC,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAC,EACxC,EAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,cAAc,EAAC,EACxC,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,cAAc,EAAC,CACxC,CAAC;;AAEF,IAAM,MAAM,GAAG,yBAAc,CAAC,CAAC,CAAC;AACzB,IAAM,aAAa,GAAG,IAAI,OAAO,CAAC,UAAA,OAAO,EAAI;AAClD,QAAM,CAAC,IAAI,CAAC,gBAAG,gBAAgB,CAAC,SAAS,GAAG,WAAW,CAAC,EAAE,OAAO,CAAC,CAAC;CACpE,CAAC,CAAC;;;;AAEI,SAAS,eAAe,GAAG;AAChC,MAAM,OAAO,GAAG,EAAE,CAAC;AACnB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7D,MAAI,KAAK,YAAA,CAAC;;AAEV,MAAI,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE;AACvB,SAAK,GAAG,oBAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,oBAAO,MAAM,CAAC,CAAC,CAAC;GAC3D;;AAED,SAAO,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,qCAAO,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxE,SAAO,CAAC,MAAM,GAAG,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3C,SAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,SAAO,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;AACxC,SAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,qCAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEnE,MAAI,KAAK,EAAE;AACT,WAAO,CAAC,KAAK,gBAAc,KAAK,CAAC,IAAI,SAAI,KAAK,CAAC,MAAM,SAAI,KAAK,CAAC,EAAE,SAAI,KAAK,CAAC,MAAM,AAAE,CAAC;GACrF;;AAED,SAAO,OAAO,CAAC;CAChB","file":"generateMessage.js","sourcesContent":["import fs from 'fs';\nimport markovCreator from 'markov';\nimport random from 'lodash/number/random';\nimport photos from './photos';\n\n// names generated by chance.js\nconst users = [\n  {avatar: \"marc\", name: \"Marc Stone\"},\n  {avatar: \"ellen\", name: \"Ellen Clayton\"},\n  {avatar: \"ruth\", name: \"Ruth Maxwell\"},\n  {avatar: \"ray\", name: \"Ray Scott\"},\n  {avatar: \"sam\", name: \"Sam Munoz\"},\n  {avatar: \"craig\", name: \"Craig Robbins\"},\n  {avatar: \"lillie\", name: \"Lillie Wolfe\"},\n  {avatar: \"susan\", name: \"Susan Keller\"}\n];\n\nconst markov = markovCreator(3);\nexport const generateReady = new Promise(resolve => {\n  markov.seed(fs.createReadStream(__dirname + '/seed.txt'), resolve);\n});\n\nexport function generateMessage() {\n  const message = {};\n  const user = users[Math.floor(Math.random() * users.length)];\n  let image;\n\n  if (Math.random() < 0.2) {\n    image = photos[Math.floor(Math.random() * photos.length)];\n  }\n\n  message.id = Number(String(random(1, 10000)) + Date.now()).toString(36);\n  message.avatar = '/avatars/' + user.avatar;\n  message.name = user.name;\n  message.time = new Date().toISOString();\n  message.body = markov.fill(markov.pick(), random(3, 15)).join(' ');\n  \n  if (image) {\n    message.photo = `/photos/${image.farm}-${image.server}-${image.id}-${image.secret}`;\n  }\n\n  return message;\n}"]}